<?php
/**
 * Portfolio Hub - Setup Wizard
 * Upload and visit this file to get started!
 */

session_start();

// Check if already installed
$configFile = __DIR__ . '/config/config.php';
$isInstalled = file_exists($configFile) && filesize($configFile) > 500;

if ($isInstalled && !isset($_GET['reinstall'])) {
    header('Location: /');
    exit;
}

// Handle form submission
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['step'])) {
    $_SESSION['setup'] = $_SESSION['setup'] ?? [];
    
    $step = (int)$_POST['step'];
    
    switch ($step) {
        case 1: // Site Info
            $_SESSION['setup']['site_title'] = trim($_POST['site_title'] ?? '');
            $_SESSION['setup']['site_url'] = rtrim(trim($_POST['site_url'] ?? ''), '/');
            $_SESSION['setup']['hero_text'] = trim($_POST['hero_text'] ?? '');
            $_SESSION['setup']['hero_subtext'] = trim($_POST['hero_subtext'] ?? '');
            break;
            
        case 2: // Admin Account
            $_SESSION['setup']['admin_email'] = trim($_POST['admin_email'] ?? '');
            $_SESSION['setup']['admin_password'] = $_POST['admin_password'] ?? '';
            break;
            
        case 3: // Theme
            $_SESSION['setup']['primary_color'] = $_POST['primary_color'] ?? '#6366f1';
            $_SESSION['setup']['secondary_color'] = $_POST['secondary_color'] ?? '#8b5cf6';
            break;
            
        case 4: // Complete Setup
            if (completeSetup($_SESSION['setup'])) {
                $_SESSION['setup_complete'] = true;
                unset($_SESSION['setup']);
            }
            break;
    }
    
    // Return JSON for AJAX
    if (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) === 'xmlhttprequest') {
        header('Content-Type: application/json');
        echo json_encode(['success' => true]);
        exit;
    }
}

function completeSetup($data) {
    // Create directories
    $dirs = [
        __DIR__ . '/config',
        __DIR__ . '/data',
        __DIR__ . '/uploads',
        __DIR__ . '/backups',
    ];
    
    foreach ($dirs as $dir) {
        if (!is_dir($dir)) {
            mkdir($dir, 0755, true);
        }
    }
    
    // Create config file
    $config = <<<PHP
<?php
/**
 * Portfolio Hub Configuration
 * Auto-generated by setup wizard
 */

return [
    'APP_ENV' => 'production',
    'APP_URL' => '{$data['site_url']}',
    'APP_NAME' => '{$data['site_title']}',
    
    'DB_PATH' => __DIR__ . '/../data/site.db',
    
    'SESSION_SECURE' => true,
    'SESSION_NAME' => 'portfolio_session',
    'CSRF_TOKEN_NAME' => 'csrf_token',
    
    'CSP_REPORT_ONLY' => false,
    'CSP_REPORT_URI' => null,
    
    'UPLOAD_MAX_MB' => 10,
    'UPLOAD_PATH' => __DIR__ . '/../uploads',
    'UPLOAD_ALLOWED_TYPES' => ['image/jpeg', 'image/png', 'image/webp'],
    
    'IMAGE_QUALITY' => 75,
    'IMAGE_SIZES' => [480, 768, 1080, 1440, 1920],
    'IMAGE_ASPECT_RATIO' => 0.75,
    
    'RATE_LIMIT_LOGIN' => 5,
    'RATE_LIMIT_MEDIA' => 20,
    
    'BACKUP_PATH' => __DIR__ . '/../backups',
    'BACKUP_KEEP_DAYS' => 14,
    
    'ANALYTICS_ID' => '',
    'RESPECT_DNT' => true,
];
PHP;
    
    file_put_contents(__DIR__ . '/config/config.php', $config);
    
    // Initialize database
    try {
        require_once __DIR__ . '/app/bootstrap.php';
        $db = getDatabase();
        
        // Create tables
        $schema = file_get_contents(__DIR__ . '/app/schema.sql');
        $db->exec($schema);
        
        // Create admin user
        $passwordHash = password_hash($data['admin_password'], PASSWORD_ARGON2ID);
        $stmt = $db->prepare("INSERT INTO users (email, password_hash, role) VALUES (?, ?, 'admin')");
        $stmt->execute([$data['admin_email'], $passwordHash]);
        
        // Insert settings
        $settings = [
            'site_title' => $data['site_title'],
            'site_description' => 'Explore my work across multiple domains',
            'hero_text' => $data['hero_text'],
            'hero_subtext' => $data['hero_subtext'],
            'brand_primary' => $data['primary_color'],
            'brand_secondary' => $data['secondary_color'],
            'autoplay_enabled' => '1',
            'autoplay_interval' => '7',
            'animation_speed' => 'normal',
            'open_links_new_tab' => '0',
        ];
        
        $stmt = $db->prepare("INSERT INTO settings (key, value) VALUES (?, ?)");
        foreach ($settings as $key => $value) {
            $stmt->execute([$key, $value]);
        }
        
        return true;
    } catch (Exception $e) {
        error_log($e->getMessage());
        return false;
    }
}

// Get current step
$currentStep = isset($_SESSION['setup']) ? count(array_filter($_SESSION['setup'])) + 1 : 1;
if ($currentStep > 4) $currentStep = 4;

// Detect site URL
$protocol = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off') ? 'https' : 'http';
$host = $_SERVER['HTTP_HOST'] ?? 'localhost';
$detectedUrl = "$protocol://$host";

?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Portfolio Hub - Setup Wizard</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        
        .wizard-container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            width: 100%;
            max-width: 600px;
            overflow: hidden;
        }
        
        .wizard-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 40px;
            text-align: center;
        }
        
        .wizard-header h1 {
            font-size: 32px;
            margin-bottom: 10px;
        }
        
        .wizard-header p {
            opacity: 0.9;
            font-size: 16px;
        }
        
        .progress-bar {
            height: 4px;
            background: rgba(255, 255, 255, 0.3);
            position: relative;
        }
        
        .progress-fill {
            height: 100%;
            background: white;
            transition: width 0.3s ease;
        }
        
        .wizard-content {
            padding: 40px;
        }
        
        .step {
            display: none;
            animation: fadeIn 0.3s ease;
        }
        
        .step.active {
            display: block;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .step-title {
            font-size: 24px;
            font-weight: 700;
            color: #1a1a1a;
            margin-bottom: 10px;
        }
        
        .step-description {
            color: #666;
            margin-bottom: 30px;
            line-height: 1.6;
        }
        
        .form-group {
            margin-bottom: 24px;
        }
        
        label {
            display: block;
            font-weight: 600;
            color: #333;
            margin-bottom: 8px;
            font-size: 14px;
        }
        
        input[type="text"],
        input[type="email"],
        input[type="password"],
        input[type="url"] {
            width: 100%;
            padding: 14px 16px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            font-size: 16px;
            transition: all 0.2s;
            font-family: inherit;
        }
        
        input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
        }
        
        input[type="color"] {
            width: 100%;
            height: 50px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            cursor: pointer;
        }
        
        .color-preview {
            display: flex;
            gap: 16px;
        }
        
        .color-preview > div {
            flex: 1;
        }
        
        .hint {
            font-size: 13px;
            color: #999;
            margin-top: 6px;
        }
        
        .wizard-actions {
            display: flex;
            gap: 12px;
            margin-top: 40px;
        }
        
        button {
            flex: 1;
            padding: 16px;
            border: none;
            border-radius: 10px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s;
            font-family: inherit;
        }
        
        .btn-primary {
            background: #667eea;
            color: white;
        }
        
        .btn-primary:hover {
            background: #5568d3;
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
        }
        
        .btn-secondary {
            background: #f5f5f5;
            color: #333;
        }
        
        .btn-secondary:hover {
            background: #e0e0e0;
        }
        
        button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none !important;
        }
        
        .success-message {
            text-align: center;
            padding: 40px 20px;
        }
        
        .success-icon {
            font-size: 80px;
            margin-bottom: 20px;
        }
        
        .success-message h2 {
            font-size: 28px;
            color: #1a1a1a;
            margin-bottom: 10px;
        }
        
        .success-message p {
            color: #666;
            margin-bottom: 30px;
            font-size: 16px;
        }
        
        .btn-success {
            background: #10b981;
            color: white;
            display: inline-block;
            padding: 16px 32px;
            text-decoration: none;
            border-radius: 10px;
            font-weight: 600;
            transition: all 0.2s;
        }
        
        .btn-success:hover {
            background: #059669;
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(16, 185, 129, 0.3);
        }
        
        .loading {
            text-align: center;
            padding: 40px 20px;
        }
        
        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .requirements {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            margin-top: 20px;
        }
        
        .requirements h4 {
            color: #333;
            margin-bottom: 12px;
        }
        
        .req-item {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 8px 0;
            font-size: 14px;
        }
        
        .req-pass { color: #10b981; }
        .req-fail { color: #ef4444; }
    </style>
</head>
<body>
    <div class="wizard-container">
        <div class="wizard-header">
            <h1>🚀 Portfolio Hub</h1>
            <p>Let's get you set up in just a few steps!</p>
        </div>
        
        <div class="progress-bar">
            <div class="progress-fill" id="progressFill" style="width: 25%"></div>
        </div>
        
        <div class="wizard-content">
            <?php if (isset($_SESSION['setup_complete'])): ?>
                <div class="success-message">
                    <div class="success-icon">🎉</div>
                    <h2>Setup Complete!</h2>
                    <p>Your portfolio hub is ready to go. Time to create some amazing tiles!</p>
                    <a href="/admin/login" class="btn-success">Go to Admin Panel</a>
                </div>
            <?php else: ?>
                <!-- Step 1: Site Information -->
                <div class="step active" data-step="1">
                    <h2 class="step-title">Site Information</h2>
                    <p class="step-description">Let's start with the basics. What should we call your portfolio hub?</p>
                    
                    <div class="form-group">
                        <label for="site_title">Site Title</label>
                        <input type="text" id="site_title" name="site_title" value="<?= htmlspecialchars($_SESSION['setup']['site_title'] ?? '') ?>" placeholder="John Doe - Portfolio Hub" required>
                        <div class="hint">This appears in browser tabs and search results</div>
                    </div>
                    
                    <div class="form-group">
                        <label for="site_url">Site URL</label>
                        <input type="url" id="site_url" name="site_url" value="<?= htmlspecialchars($_SESSION['setup']['site_url'] ?? $detectedUrl) ?>" placeholder="https://yourname.com" required>
                        <div class="hint">Your website's full URL (we auto-detected this one!)</div>
                    </div>
                    
                    <div class="form-group">
                        <label for="hero_text">Hero Text</label>
                        <input type="text" id="hero_text" name="hero_text" value="<?= htmlspecialchars($_SESSION['setup']['hero_text'] ?? '') ?>" placeholder="Your Name" required>
                        <div class="hint">Large text at the top of your homepage</div>
                    </div>
                    
                    <div class="form-group">
                        <label for="hero_subtext">Hero Subtext</label>
                        <input type="text" id="hero_subtext" name="hero_subtext" value="<?= htmlspecialchars($_SESSION['setup']['hero_subtext'] ?? '') ?>" placeholder="Designer • Developer • Creator" required>
                        <div class="hint">Subtitle describing what you do</div>
                    </div>
                </div>
                
                <!-- Step 2: Admin Account -->
                <div class="step" data-step="2">
                    <h2 class="step-title">Admin Account</h2>
                    <p class="step-description">Create your admin account to manage tiles and settings.</p>
                    
                    <div class="form-group">
                        <label for="admin_email">Email Address</label>
                        <input type="email" id="admin_email" name="admin_email" value="<?= htmlspecialchars($_SESSION['setup']['admin_email'] ?? '') ?>" placeholder="you@example.com" required>
                        <div class="hint">You'll use this to login</div>
                    </div>
                    
                    <div class="form-group">
                        <label for="admin_password">Password</label>
                        <input type="password" id="admin_password" name="admin_password" placeholder="Choose a strong password" required minlength="8">
                        <div class="hint">At least 8 characters</div>
                    </div>
                    
                    <div class="form-group">
                        <label for="admin_password_confirm">Confirm Password</label>
                        <input type="password" id="admin_password_confirm" name="admin_password_confirm" placeholder="Type your password again" required>
                    </div>
                </div>
                
                <!-- Step 3: Theme -->
                <div class="step" data-step="3">
                    <h2 class="step-title">Choose Your Colors</h2>
                    <p class="step-description">Pick colors that match your brand. You can change these later!</p>
                    
                    <div class="color-preview">
                        <div class="form-group">
                            <label for="primary_color">Primary Color</label>
                            <input type="color" id="primary_color" name="primary_color" value="<?= htmlspecialchars($_SESSION['setup']['primary_color'] ?? '#6366f1') ?>">
                            <div class="hint">Main accent color</div>
                        </div>
                        
                        <div class="form-group">
                            <label for="secondary_color">Secondary Color</label>
                            <input type="color" id="secondary_color" name="secondary_color" value="<?= htmlspecialchars($_SESSION['setup']['secondary_color'] ?? '#8b5cf6') ?>">
                            <div class="hint">Complement color</div>
                        </div>
                    </div>
                </div>
                
                <!-- Step 4: Installation -->
                <div class="step" data-step="4">
                    <div class="loading">
                        <div class="spinner"></div>
                        <h2 class="step-title">Setting up your portfolio...</h2>
                        <p class="step-description">Creating database, configuring settings, and preparing everything for you.</p>
                    </div>
                </div>
                
                <div class="wizard-actions">
                    <button type="button" class="btn-secondary" id="prevBtn" style="display: none;">← Back</button>
                    <button type="button" class="btn-primary" id="nextBtn">Next →</button>
                </div>
            <?php endif; ?>
        </div>
    </div>
    
    <script>
        let currentStep = 1;
        const totalSteps = 4;
        
        function updateProgress() {
            const progress = (currentStep / totalSteps) * 100;
            document.getElementById('progressFill').style.width = progress + '%';
        }
        
        function showStep(step) {
            document.querySelectorAll('.step').forEach(s => s.classList.remove('active'));
            document.querySelector(`[data-step="${step}"]`).classList.add('active');
            
            document.getElementById('prevBtn').style.display = step > 1 ? 'block' : 'none';
            document.getElementById('nextBtn').textContent = step === 3 ? 'Complete Setup' : 'Next →';
            
            updateProgress();
        }
        
        function validateStep(step) {
            const inputs = document.querySelectorAll(`[data-step="${step}"] input[required]`);
            let valid = true;
            
            inputs.forEach(input => {
                if (!input.value.trim()) {
                    valid = false;
                    input.style.borderColor = '#ef4444';
                } else {
                    input.style.borderColor = '#e0e0e0';
                }
            });
            
            // Special validation for step 2 (password match)
            if (step === 2) {
                const pass = document.getElementById('admin_password').value;
                const confirm = document.getElementById('admin_password_confirm').value;
                
                if (pass !== confirm) {
                    alert('Passwords do not match!');
                    return false;
                }
                
                if (pass.length < 8) {
                    alert('Password must be at least 8 characters!');
                    return false;
                }
            }
            
            if (!valid) {
                alert('Please fill in all required fields');
            }
            
            return valid;
        }
        
        async function saveStep(step) {
            const formData = new FormData();
            formData.append('step', step);
            
            const inputs = document.querySelectorAll(`[data-step="${step}"] input`);
            inputs.forEach(input => {
                formData.append(input.name, input.value);
            });
            
            try {
                const response = await fetch('setup.php', {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                });
                
                return response.ok;
            } catch (error) {
                console.error('Save failed:', error);
                return false;
            }
        }
        
        document.getElementById('nextBtn').addEventListener('click', async () => {
            if (!validateStep(currentStep)) {
                return;
            }
            
            // Save current step
            const saved = await saveStep(currentStep);
            
            if (!saved && currentStep < 4) {
                alert('Failed to save. Please try again.');
                return;
            }
            
            if (currentStep < totalSteps) {
                currentStep++;
                showStep(currentStep);
                
                // Trigger installation on step 4
                if (currentStep === 4) {
                    setTimeout(() => {
                        window.location.reload();
                    }, 2000);
                }
            }
        });
        
        document.getElementById('prevBtn').addEventListener('click', () => {
            if (currentStep > 1) {
                currentStep--;
                showStep(currentStep);
            }
        });
        
        // Initial setup
        updateProgress();
    </script>
</body>
</html>
